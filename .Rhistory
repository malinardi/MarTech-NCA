knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
options(repos = "https://cran.rstudio.com")
rm(list = ls())
if(!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra,
e1071,
caret,
rstatix,
lmtest,
ggpmisc,
car,
psych,
fastDummies
NCA
options(repos = "https://cran.rstudio.com")
rm(list = ls())
if(!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra,
e1071,
caret,
rstatix,
lmtest,
ggpmisc,
car,
psych,
fastDummies,
NCA
)
p_loaded()
dados <- read.csv("BankChurners.csv")
# excluir as ultimas duas colunas para ocultar o resultado anterior do projeto
dados <- dados[ ,1:21]
#varificar se há alguma linha repetida
anyDuplicated(dados)
#Exploração da estrutura do data frame - visão 1
ExpData(dados,type=1)
#Exploração da estrutura do data frame - visão 2
ExpData(dados,type=2)
#Exploração da estrutura do data frame - visão 3
str(dados)
#Exploração da estrutura do data frame - visão 4
plot_intro(dados)
# ajuste da variável Genero como dummy
## Genero
dados$gender_cod <- as.numeric(dados$Gender == "F") #0=male e 1=female
# redução da amostra
dados <- dados %>%
sample_frac(0.05, replace = FALSE)
nca_outliers(dados)
glimpse(dados)
nca_outliers(dados, "Crad_Category", "Attrition_Flag")
nca_outliers(dados, "gender_cod", "Credit_Limit")
## rodar: unique(dados$VARIAVEL) para perceber a ordem e nomes dos labels
#ajuste variável género
dados$gender_cod <- as.numeric(dados$Gender == "F")
levels(dados$gender_cod) <- c("M", "F")
table(dados$Gender, dados$gender_cod)
#ajuste variável nível de educação
dados$education_cod <- as.numeric(factor(dados$Education_Level, levels = unique(dados$Education_Level)))
levels(dados$education_cod) <- c("High School","Graduate","Uneducated","Unknown","College","Post-Graduate","Doctorate")
table(dados$Education_Level, dados$education_cod)
#ajuste variável flag de atrito
dados$flag <- as.numeric(dados$Attrition_Flag == "Existing Customer")
levels(dados$gender_cod) <- c("Existing Customer", "Attrited Customer")
table(dados$Attrition_Flag, dados$flag)
# ajuste variável estado civil
dados$marital_cod <- as.numeric(factor(dados$Marital_Status, levels = unique(dados$Marital_Status)))
levels(dados$marital_cod) <- c("Married","Single","Unknown","Divorced")
table(dados$Marital_Status, dados$marital_cod)
# ajuste variável nivel de renda
dados$income_cod <- as.numeric(factor(dados$Income_Category, levels = unique(dados$Income_Category)))
levels(dados$income_cod) <- c("$60K - $80K","Less than $40K","$80K - $120K",  "$40K - $60K",
"$120K +","Unknown")
table(dados$Income_Category, dados$income_cod)
# ajuste variável tipo de cartão
dados$card_cod <- as.numeric(factor(dados$Card_Category, levels = unique(dados$Card_Category)))
levels(dados$card_cod) <- c("Blue", "Gold", "Silver", "Platinum")
table(dados$Card_Category, dados$card_cod)
nca_outliers(dados, "gender_cod", "Credit_Limit")
nca_outliers(dados, "Crad_Category", "Attrition_Flag")
nca_outliers(dados, "card_cod", "flag")
a <- data("nca.example2")
a
a <- data(nca.example2)
a
data("nca.example2")
View(nca.example2)
glimpse(nca.example2)
nca_outliers(nca.example2, 1, 2:4, ploty = TRUE)
nca_outliers(nca.example2, 1, 2:4, plotly = TRUE)
nca_outliers(nca.example2, 1, 2, plotly = TRUE)
nca_outliers(nca.example2, 2, 1, plotly = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(error = FALSE)
options(repos = "https://cran.rstudio.com")
rm(list = ls())
if(!require(pacman)) install.packages("pacman")
library(pacman)
pacman::p_load(tidyverse,
Hmisc,
stargazer,
visdat,
rmarkdown,
knitr,
GGally,
summarytools,
extremevalues,
DataExplorer,
gplots,
ggplot2,
SmartEDA,
kableExtra,
e1071,
caret,
rstatix,
lmtest,
ggpmisc,
car,
psych,
fastDummies,
NCA
)
p_loaded()
# ficheiro de exemplo do NCA
data(nca.example2)
dados <- nca.example2
#varificar se há alguma linha repetida
anyDuplicated(dados)
#Exploração da estrutura do data frame - visão 1
ExpData(dados,type=1)
#Exploração da estrutura do data frame - visão 2
ExpData(dados,type=2)
#Exploração da estrutura do data frame - visão 3
str(dados)
#Exploração da estrutura do data frame - visão 4
plot_intro(dados)
colname(dados)
colnames(dados)
# Criar um modelo de NCA
nca.model <- nca_analysis(dados, c("Contractual detail", "Goodwill trust","Competence trust"), "Innovation",  bottleneck.x = "actual", bottleneck.y = "actual", test.rep = 1000)
nca_output(nca.model1, summaries = TRUE, bottlenecks = TRUE, plotly = TRUE)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE, plotly = TRUE)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE, plotly = TRUE)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE, plotly = TRUE)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE, test = TRUE, pdf=TRUE)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE, test = TRUE)
# Criar um modelo de NCA
nca.model <- nca_analysis(dados, c("Contractual detail", "Goodwill trust","Competence trust"), "Innovation",  bottleneck.x = "actual", bottleneck.y = "actual", test.rep = 1000)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE)
reg <- lm(Innovation ~ Contractual detail + Goodwill trust + Competence trust, dados)
reg <- lm(Innovation ~ Contractual detail + Goodwill trust + Competence trust, dados)
reg <- lm(Innovation ~ Contractual detail + Goodwill trust + Competence trust, dados)
lm(Innovation ~ Contractual detail, dados)
lm("Innovation"  ~ "Contractual detail", dados)
glimpse(dados)
colnames(dados)[2] <- "Contractual_detail"
glimpse(dados)
lm(Innovation ~ Contractual_detail, dados)
a <- lm(Innovation ~ Contractual_detail, dados)
summary(a)
# ficheiro de exemplo do NCA
data(nca.example2)
dados <- nca.example2
colnames(dados)[2] <- "Contractual_detail"
colnames(dados)[3] <- "Goodwill_trust"
colnames(dados)[4] <- "Competence_trust"
#varificar se há alguma linha repetida
anyDuplicated(dados)
#Exploração da estrutura do data frame - visão 1
ExpData(dados,type=1)
#Exploração da estrutura do data frame - visão 2
ExpData(dados,type=2)
#Exploração da estrutura do data frame - visão 3
str(dados)
#Exploração da estrutura do data frame - visão 4
plot_intro(dados)
reg <- lm(Innovation ~ Contractual_detail + Goodwill_trust + Competence_trust, dados)
summary(reg)
reg <- lm(Innovation ~ Contractual_detail + Goodwill_trust + Competence_trust, dados)
summary(reg)
# Criar um modelo de NCA
nca.model <- nca_analysis(dados, c("Contractual_detail", "Goodwill_trust","Competence_trust"), "Innovation",  bottleneck.x = "percentage", bottleneck.y = "percentage", test.rep = 1000)
nca_output(nca.model, summaries = TRUE, bottlenecks = TRUE)
